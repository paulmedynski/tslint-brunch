This is a test application used to manually verify the tslint-brunch plugin
using a real brunch build environment.  It lints and builds some sample
TypeScript files found in the app/ directory using whatever version of
tslint and typescript have been installed.

The package.json in this directory specifies the version of tslint-brunch
found in the repository's root directory via the file-based dependency
mechanism.

Helpful commands:

npm install

  Fetch all of this app's dependent modules and put them into
  node_modules/.

npm install typescript@x.y.z

  Install whatever version of typescript you want to test with.

./tsc -v

  Confirm that you're using the version of TypeScript that you think you are
  :)

export NODE_PATH=node_modules/

  Adds this test app's node_modules/ to node's resolver.  This is necessary
  because our package.json uses file syntax for the tslint-brunch dependency,
  which makes it a symlink in node_modules/, which node then resolves to the
  absolute path to tslint-brunch (our repository root directory), and from
  there node can't find tslint, since it only installed in this test app's
  node_modules/.  Sigh!
  
./brunch build -d -p

  Build the test app.  This tests tslint-brunch.  The build result goes into
  the public/app.js.

./tslint -c app/app-tslint.json -p app/app-tsconfig.json -t verbose

  Lint the app's TypeScript files directly with the tslint command-ine tool to
  see if it finds any errors that tslint-brunch doesn't.
  
  Note that the tsling and tsc config failes don't use their standard names.
  this is done to avoid having them picked up when building the test app via
  brunch.
